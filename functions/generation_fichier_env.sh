#!/bin/bash
# functions/generation_fichier_env.sh
# G√©n√®re ou met √† jour le fichier .env dans mowgli-docker

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
[ -f "$SCRIPT_DIR/functions/utils.sh" ] && source "$SCRIPT_DIR/functions/utils.sh"

generation_env() {
  local target_dir="$HOME/mowgli-docker"
  local env_file="$target_dir/.env"
  local example_file="$target_dir/.env.example"
  local compose_file="$target_dir/docker-compose.yaml"

  echo "=== G√©n√©ration / mise √† jour du fichier .env ==="

  if [ ! -d "$target_dir" ]; then
    echo "[ERREUR] Le dossier $target_dir est introuvable."
    echo "         Veuillez d'abord le cloner via l‚Äôoption C)."
    pause_ou_touche
    return 1
  fi

  if [ ! -f "$env_file" ]; then
    if [ -f "$example_file" ]; then
      cp "$example_file" "$env_file"
      echo "‚úÖ Fichier .env cr√©√© √† partir de .env.example"
    else
      echo "[ERREUR] Aucun fichier .env ni .env.example trouv√© dans $target_dir"
      pause_ou_touche
      return 1
    fi
  else
    echo "‚úÖ Le fichier .env existe d√©j√†."
    if ! ask_update_if_exists "Souhaitez-vous mettre √† jour les variables ROS_IP / MOWER_IP / MQTT_BROKER ?"; then
      echo "‚è≠Ô∏è  Mise √† jour ignor√©e."
      pause_ou_touche
      return
    fi
    sauvegarder_fichier "$env_file"
  fi

  # V√©rifie que l'interface wlan0 est active
  if ! ip link show wlan0 | grep -q "state UP"; then
    echo "‚ùå Le robot n‚Äôest pas connect√© en WiFi (interface wlan0 inactive)."
    echo "‚ÑπÔ∏è  Veuillez connecter le Raspberry Pi en WiFi avant de continuer."
    pause_ou_touche
    return 1
  fi

  # R√©cup√®re l‚ÄôIP WiFi
  local detected_ip
  detected_ip=$(ip -4 addr show wlan0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
  if [ -z "$detected_ip" ]; then
    echo "‚ùå Impossible de r√©cup√©rer l‚Äôadresse IP WiFi du Raspberry Pi."
    echo "‚ÑπÔ∏è  V√©rifiez que vous √™tes bien connect√© √† un r√©seau via wlan0."
    pause_ou_touche
    return 1
  fi

  read -p "Adresse IP de ROS (ROS_IP) [$detected_ip] : " ros_ip
  ros_ip=${ros_ip:-$detected_ip}

  read -p "Adresse IP du robot (MOWER_IP) [$detected_ip] : " mower_ip
  mower_ip=${mower_ip:-$detected_ip}

  read -p "Adresse du broker MQTT (MQTT_BROKER) [$detected_ip] : " mqtt_broker
  mqtt_broker=${mqtt_broker:-$detected_ip}

  sed -i "s/^ROS_IP=.*/ROS_IP=$ros_ip/" "$env_file" || echo "ROS_IP=$ros_ip" >> "$env_file"
  sed -i "s/^MOWER_IP=.*/MOWER_IP=$mower_ip/" "$env_file" || echo "MOWER_IP=$mower_ip" >> "$env_file"
  sed -i "s/^MQTT_BROKER=.*/MQTT_BROKER=$mqtt_broker/" "$env_file" || echo "MQTT_BROKER=$mqtt_broker" >> "$env_file"

  echo "‚úÖ Fichier .env mis √† jour avec :"
  grep -E 'ROS_IP|MOWER_IP|MQTT_BROKER' "$env_file"

  # Red√©marrage auto si docker-compose est pr√©sent
  if [ -f "$compose_file" ]; then
    echo
    echo "üîÅ Le fichier docker-compose.yaml a √©t√© d√©tect√©."
    if ask_update_if_exists "Souhaitez-vous red√©marrer les conteneurs Docker pour appliquer les nouvelles variables ?"; then
      cd "$target_dir" || return 1
      docker compose down
      docker compose up -d
      cd - > /dev/null
      echo "‚úÖ Conteneurs red√©marr√©s avec succ√®s."
    fi
  fi

  pause_ou_touche
}
